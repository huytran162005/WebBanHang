@{
    ViewData["Title"] = "Home Page";
}
@model List<Product>
@* <div class="row row-cols-1 row-cols-md-3 g-4">
    @foreach (var p in Model)
    {
        <div class="col">
            <div class="card h-100">
                <h3 class="card-header">
                    @p.Name
                </h3>
                @if (String.IsNullOrEmpty(p.ImageUrl))
                {
                    <svg xmlns="http://www.w3.org/2000/svg" class="d-block user-select-none" width="100%" height="200" aria-label="Placeholder: Image cap" focusable="false" role="img" preserveAspectRatio="xMidYMid slice" viewBox="0 0 318 180" style="font-size:1.125rem;text-anchor:middle">
                        <rect width="100%" height="100%" fill="#868e96"></rect>
                        <text x="50%" y="50%" fill="#dee2e6" dy=".3em">Image cap</text>
                    </svg>
                }
                else
                {
                    <img src="@p.ImageUrl" class="card-img-top" style="height: 250px; object-fit: contain;" alt="@p.Name">
                }

                <div class="card-body">
                    <p class="card-text">@p.Description</p>
                </div>
                <ul class="list-group list-group-flush">
                    <li class="list-group-item fw-bold">Price: $@p.Price</li>
                </ul>
                <div class="card-body">
                    <a href="#" class="card-link">Card link</a>
                    <a href="#" class="card-link">Another link</a>
                </div>
                <div class="card-footer text-muted">
                    2 days ago
                </div>
            </div>
        </div>
    }
</div> *@
<div class="row row-cols-1 row-cols-md-4 g-1" id="products-container">
    @await Html.PartialAsync("_ProductCardsPartial", Model)
</div>

<div class="d-grid gap-2 col-6 mx-auto mt-5 mb-4">
    <button id="load-more-btn" class="btn btn-lg btn-primary" type="button"
            data-current-count="@Model.Count" data-total-count="@ViewBag.TotalProductCount">
        Xem Thêm
    </button>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            var $loadMoreBtn = $('#load-more-btn');
            var $productsContainer = $('#products-container');

            $loadMoreBtn.on('click', function() {
                var currentCount = parseInt($loadMoreBtn.data('current-count'));
                var totalCount = parseInt($loadMoreBtn.data('total-count'));

                // Hiển thị trạng thái đang tải
                $loadMoreBtn.html('<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Đang tải...');
                $loadMoreBtn.prop('disabled', true);

                // Lấy thêm sản phẩm
                $.get('@Url.Action("LoadMoreProducts")', { skip: currentCount }, function(data) {
                    // Thêm sản phẩm mới vào container
                    $productsContainer.append(data);

                    // Cập nhật số lượng hiện tại
                    var newCount = currentCount + 6;
                    $loadMoreBtn.data('current-count', newCount);

                    // Đặt lại trạng thái nút
                    $loadMoreBtn.html('Xem Thêm');
                    $loadMoreBtn.prop('disabled', false);

                    // Ẩn nút nếu tất cả sản phẩm đã được tải xong
                    if (newCount >= totalCount) {
                        $loadMoreBtn.hide();
                    }
                });
            });

            // Ẩn nút nếu đã hiển thị tất cả sản phẩm
            if (parseInt($loadMoreBtn.data('current-count')) >= parseInt($loadMoreBtn.data('total-count'))) {
                $loadMoreBtn.hide();
            }
        });
    </script>
}